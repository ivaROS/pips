#!/usr/bin/env python
PACKAGE = "pips"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("robot_radius", double_t, 0, "Robot radius",    .178, .01,   1)
gen.add("robot_height", double_t, 0, "Robot height",    .48, .01,   1)
gen.add("floor_tolerance", double_t, 0, "Floor tolerance",    .03, 0,   1)
gen.add("safety_expansion", double_t, 0, "Safety expansion",    .02, 0,   1)

model_enum = gen.enum([ gen.const("rectangular",      int_t, 0, "Rectangular depth projection"),
                        gen.const("rectangular_ss",      int_t, 1, "Rectangular depth projection (short circuit & vectorized)"),

                        gen.const("rectangular_pf",      int_t, 2, "Rectangular depth projection (parallel for)"),
                        gen.const("rectangular_ocl",      int_t, 3, "Rectangular depth projection with ocl (maybe)"),

                        gen.const("cylindrical",     int_t, 4, "Cylindrical depth projection"),
                        gen.const("cylindrical_t", int_t, 5, "Cylindrical depth projection (transposed)"),
                        gen.const("cylindrical_t_vect",      int_t, 6, "Cylindrical depth projection (transposed & vectorized)"),

                        gen.const("cylindrical_c", int_t, 7, "Cylindrical depth projection (cached)")
                        ],
#                        gen.const("dense",     int_t, 3, "Dense projection")],
                     "An enum to set the desired hallucinated robot model type")

gen.add("model_type", int_t, 0, "Set the desired robot model type", 0, 0, 7, edit_method=model_enum)

gen.add("show_im", bool_t, 0, "Return full collision", False) 

exit(gen.generate(PACKAGE, "pips", "HallucinatedRobotModel"))
